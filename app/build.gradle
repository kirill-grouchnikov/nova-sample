/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.novasample"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            // Add the location of Nova-generated resources to be processed
            // for generating the R references
            res.srcDirs += ['build/generated/res/custom',]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

//configurations.all {
//    resolutionStrategy.cacheChangingModulesFor(0, "seconds")
//}

repositories {
    mavenCentral()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.pushing-pixels:nova-core:0.1-SNAPSHOT"
}

import com.example.novasample.Sample
import dev.android.playground.nova.core.base.DictionaryKt

task runNova {
    // Run our theme/style DSL snippet
    Sample.helloWorldNova()
    // And write the resulting <style> blocks into build/generated location
    DictionaryKt.write(new File(projectDir, "build/generated/res/custom").path, true)
}

gradle.projectsEvaluated {
    preBuild.dependsOn('runNova')
}
